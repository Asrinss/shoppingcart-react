{"version":3,"file":"static/js/306.7b4586b3.chunk.js","mappings":"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","sources":["pages/cart/cart-item.tsx","pages/cart/cart.tsx"],"sourcesContent":["import React, { useContext, memo, useCallback } from \"react\";\r\nimport { ShopContext } from \"../../context/shop-context\";\r\nimport { Product } from \"../../types/product\";\r\n\r\ninterface CartItemProps {\r\n  data: Product;\r\n}\r\n\r\nexport const CartItem: React.FC<CartItemProps> = memo(({ data }) => {\r\n  const { id, productName, price, productImage } = data;\r\n  const context = useContext(ShopContext);\r\n\r\n  const handleQuantityChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!context) return;\r\n    const newAmount = Number(e.target.value);\r\n    if (newAmount >= 0) {\r\n      context.updateCartItemCount(newAmount, id);\r\n    }\r\n  }, [id, context]);\r\n\r\n  if (!context) return null;\r\n  const { cartItems, addToCart, removeFromCart } = context;\r\n\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <img src={productImage} alt={productName} loading=\"lazy\" />\r\n      <div className=\"description\">\r\n        <p>\r\n          <b>{productName}</b>\r\n        </p>\r\n        <p>Price: ${price}</p>\r\n        <div className=\"countHandler\">\r\n          <button onClick={() => removeFromCart(id)}> - </button>\r\n          <input\r\n            value={cartItems[id]}\r\n            onChange={handleQuantityChange}\r\n            type=\"number\"\r\n            min=\"0\"\r\n          />\r\n          <button onClick={() => addToCart(id)}> + </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}); ","import React, { useState, useContext, useCallback, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ShopContext } from \"../../context/shop-context\";\r\nimport { PRODUCTS } from \"../../products\";\r\nimport { CartItem } from \"./cart-item\";\r\nimport \"./cart.css\";\r\n\r\nexport const Cart: React.FC = () => {\r\n  const context = useContext(ShopContext);\r\n  const [paymentMethod, setPaymentMethod] = useState<string>(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handlePaymentChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPaymentMethod(event.target.value);\r\n  }, []);\r\n\r\n  const handleBuy = useCallback(() => {\r\n    if (!context) return;\r\n    if (!paymentMethod) {\r\n      alert(\"Please select a payment method\");\r\n      return;\r\n    }\r\n    context.buy();\r\n    navigate(\"/\");\r\n    alert(\"Your purchase is completed successfully!\");\r\n  }, [paymentMethod, context, navigate]);\r\n\r\n  const totalAmount = useMemo(() => {\r\n    if (!context) return 0;\r\n    return context.getTotalCartAmount();\r\n  }, [context]);\r\n\r\n  const cartProducts = useMemo(() => {\r\n    if (!context) return [];\r\n    return PRODUCTS.filter(product => context.cartItems[product.id] !== 0);\r\n  }, [context]);\r\n\r\n  if (!context) return null;\r\n\r\n  if (cartProducts.length === 0) {\r\n    return <h1 className=\"cart-empty\">Your Shopping Cart is Empty</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div>\r\n        <h1>Products</h1>\r\n      </div>\r\n      <div className=\"cart-items\">\r\n        {cartProducts.map((product) => (\r\n          <CartItem key={product.id} data={product} />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"checkout\">\r\n        <p>Total: ${totalAmount}</p>\r\n        <div className=\"payment-methods\">\r\n          <h2>Choose Payment Method</h2>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"creditCard\"\r\n              name=\"paymentMethod\"\r\n              value=\"Credit Card\"\r\n              onChange={handlePaymentChange}\r\n            />\r\n            <label htmlFor=\"creditCard\">Credit Card</label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              onChange={handlePaymentChange}\r\n            />\r\n            <label htmlFor=\"paypal\">PayPal</label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"bitcoin\"\r\n              name=\"paymentMethod\"\r\n              value=\"Bitcoin\"\r\n              onChange={handlePaymentChange}\r\n            />\r\n            <label htmlFor=\"bitcoin\">Bitcoin</label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"cash\"\r\n              name=\"paymentMethod\"\r\n              value=\"Cash on Delivery\"\r\n              onChange={handlePaymentChange}\r\n            />\r\n            <label htmlFor=\"cash\">Cash on Delivery</label>\r\n          </div>\r\n        </div>\r\n        <button onClick={() => navigate(\"/\")}>Continue Shopping</button>\r\n        <button onClick={handleBuy}>Buy</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"names":["CartItem","memo","_ref","data","id","productName","price","productImage","context","useContext","ShopContext","handleQuantityChange","useCallback","e","newAmount","Number","target","value","updateCartItemCount","cartItems","addToCart","removeFromCart","_jsxs","className","children","_jsx","src","alt","loading","onClick","onChange","type","min","Cart","paymentMethod","setPaymentMethod","useState","navigate","useNavigate","handlePaymentChange","event","handleBuy","buy","alert","totalAmount","useMemo","getTotalCartAmount","cartProducts","PRODUCTS","filter","product","length","map","name","htmlFor"],"sourceRoot":""}